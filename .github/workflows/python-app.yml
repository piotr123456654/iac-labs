# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    concurrency:
      group: first
    
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3

    - name: Install dependencies
      run: |
        poetry install --no-root

        
  lint:

    runs-on: ubuntu-latest
    
    concurrency:
      group: second
    
    defaults:
      run:
        working-directory: ./example-app
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        

    - name: Lint with flake8
      run: |
        poetry run task lint


        
  security:

    runs-on: ubuntu-latest

    concurrency:
      group: second

    defaults:
      run:
        working-directory: ./example-app
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3


    - name: security
      run: |
        poetry run task test

        
  formatter:

    runs-on: ubuntu-latest
    
    concurrency:
      group: second    
    
    defaults:
      run:
        working-directory: ./example-app
        
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: formatter
      run: |
        poetry run task formatter        
        
        
        
  unittest:

    runs-on: ubuntu-latest
    
    concurrency:
      group: third
    
    defaults:
      run:
        working-directory: ./example-app
        
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: unittest
      run: |
        pytest run 
    
      
